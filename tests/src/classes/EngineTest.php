<?php

namespace Test\Shop4FlexiBee\Shop4FlexiBee;

use namespace Shop4FlexiBee\Engine;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-04-19 at 15:47:32.
 */
class EngineTest extends \Test\Ease\BrickTest
{
    /**
     * @var Engine
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Engine;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::takeData
     * @todo   Implement testTakeData().
     */
    public function testTakeData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::doThings
     * @todo   Implement testDoThings().
     */
    public function testDoThings()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::htmlizeData
     */
    public function testHtmlizeData()
    {
        $this->assertEquals([0 => ['a' => 1, 'color' => null], 1 => ['b' => 2, 'color' => null]],
            $this->object->htmlizeData([0 => ['a' => 1], 1 => ['b' => 2]]));
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::csvizeData
     */
    public function testCsvizeData()
    {
        $this->assertEquals([],
            $this->object->csvizeData([0 => ['a' => ['A1' => 'A1', 'A2' => 'A2']],
                1 => ['b' => ['b1' => 'b1', 'b2' => 'b2']]]));
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::csvizeRow
     */
    public function testCsvizeRow()
    {
        $this->assertEquals([],
            $this->object->csvizeRow(
                ['A1' => 'A1', 'A2' => ['2A', '2B']]
            )
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::htmlizeRow
     */
    public function testHtmlizeRow()
    {
        $this->assertEquals([],
            $this->object->htmlizeRow(
                ['A1' => 'A1', 'A2' => ['2A', '2B']]
        ));
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::getId
     * @todo   Implement testGetId().
     */
    public function testGetId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::setId
     * @todo   Implement testSetId().
     */
    public function testSetId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::getName
     * @todo   Implement testGetName().
     */
    public function testGetName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::delete
     * @todo   Implement testDelete().
     */
    public function testDelete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::getListingQuerySelect
     * @todo   Implement testGetListingQuerySelect().
     */
    public function testGetListingQuerySelect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::getListingQueryWhere
     * @todo   Implement testGetListingQueryWhere().
     */
    public function testGetListingQueryWhere()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::operationsMenu
     * @todo   Implement testOperationsMenu().
     */
    public function testOperationsMenu()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::handleUpload
     * @todo   Implement testHandleUpload().
     */
    public function testHandleUpload()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::searchString
     * @todo   Implement testSearchString().
     */
    public function testSearchString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::unsetUnknownColumns
     * @todo   Implement testUnsetUnknownColumns().
     */
    public function testUnsetUnknownColumns()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::getDataFromSQL
     * @todo   Implement testGetDataFromSQL().
     */
    public function testGetDataFromSQL()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::sqlColumnsToSelect
     * @todo   Implement testSqlColumnsToSelect().
     */
    public function testSqlColumnsToSelect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::getWhere
     * @todo   Implement testGetWhere().
     */
    public function testGetWhere()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::getKeySelect
     * @todo   Implement testGetKeySelect().
     */
    public function testGetKeySelect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::setListingData
     * @todo   Implement testSetListingData().
     */
    public function testSetListingData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers namespace Shop4FlexiBee\Engine::getListingData
     * @todo   Implement testGetListingData().
     */
    public function testGetListingData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}